"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 4.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-q7h6n-l*wr4as%(^el-z1c@3t4onvc51(u1=i7(-zgnj=c0h^f'
# SECRET_KEY = config('SECRET_KEY')
# values stored in .env

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = config('DEBUG')
# values stored in .env

# ALLOWED_HOSTS if DEBUG = false
# ALLOWED_HOSTS =  ['localhost', '127.0.0.1']
ALLOWED_HOSTS = []

# Admin-logs configuration

# Allows super users/staff users to remove entries withing the admin interface default value = True
# DJANGO_ADMIN_LOGS_DELETABLE = False

# Enables admin log entries default value = False - set True to view logs
DJANGO_ADMIN_LOGS_ENABLED = True

# Ignores log entries with the message “No fields changed” default value = False
# DJANGO_ADMIN_LOGS_IGNORE_UNCHANGED = True

# Axes configuration

AXES_FAILURE_LIMIT: 5
# number of login attempts that will be allowed before a user is locked out of your application 

AXES_COOLOFF_TIME: 1
# This dictates how long you will have to wait before you can try logging into your website again. Integers are represented by hours and there is no default value set.

AXES_RESET_ON_SUCCESS = True 
# If the AXES_FAILURE_LIMI is set to 5 failed attempts and the user logs in successfully after 4 failed attempts, this resets failed attempts to 0

# Application definition

INSTALLED_APPS = [
    'polls.apps.PollsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_admin_logs',   
    'user_visit',
    'axes',
    'csp'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # This module should be listed after the django.middleware.security.SecurityMiddleware module as ordering is important
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # CSP middleware
    'csp.middleware.CSPMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # user-visit middleware
    'django.contrib.messages.middleware.MessageMiddleware',
    'user_visit.middleware.UserVisitMiddleware',
    # axes middleware
    'axes.middleware.AxesMiddleware'
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

#authentication backends for axes 
AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesStandaloneBackend',
    'django.contrib.auth.backends.ModelBackend'
]

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"

# Content Security Policy headers settings

# fallback for other types of content (scripts, images, styles).
# CSP_DEFAULT_SRC = ("'self'",)

# Specifies valid sources for * 
# CSP_STYLE_SRC = ("'self'",)
# CSP_SCRIPT_SRC = ("'self'",)
# CSP_IMG_SRC = ("'self'",)
# CSP_FONT_SRC = ("'self'",)